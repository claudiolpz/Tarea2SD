version: '3.1'

networks:
  lared:
    driver: bridge

services:
  node-api:
    container_name: api-serverPrincipal
    build: ./server/api
    depends_on:
       - node-api-ventas
       - node-api-stock
       - node-api-aviso
       - node-api-miembro
       - postgres

    # volumes:
    #    - './server/api:/usr/src/app'
    networks:
       - lared
    ports:
      - "3000:3000"
        
  node-api-ventas:
    container_name: api-ventas
    build: ./server/consumer1
    networks:
      - lared
    # volumes:
    #   - ./server/error:/usr/src/app
    depends_on:
        - postgres
    ports:
      - "8000:8000"

  node-api-stock:
    container_name: api-stock
    build: ./server/consumer2
    networks:
      - lared
    # volumes:
    #   - ./server/error:/usr/src/app
    depends_on:
        - postgres
    ports:
      - "7000:7000"

  node-api-aviso:
    container_name: api-aviso
    build: ./server/consumer3
    networks:
      - lared
    # volumes:
    #   - ./server/error:/usr/src/app
    depends_on:
        - postgres
    ports:
      - "6000:6000"

  node-api-miembro:
    container_name: api-miembro
    build: ./server/registrar
    networks:
      - lared
    # volumes:
    #   - ./server/error:/usr/src/app
    depends_on:
        - postgres
    ports:
      - "4000:4000"


  zookeeper:
    container_name: elzookeeper
    image: 'bitnami/zookeeper:latest'
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - lared
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    
  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    networks:
     - lared
    depends_on:
      - zookeeper
      - postgres
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"   
      KAFKA_ADVERTISED_PORT: "9092"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_NUM_PARTITIONS: 2
    ports:
      - 9092:9092
#################-POSTGRES-##########################
  postgres:
    image: docker.io/bitnami/postgresql:11
    volumes:
      - ./Database/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lared
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_DATABASE=tarea2
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_PASSWORD=postgres
    ports:
      - "5432:5432"
